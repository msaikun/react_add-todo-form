{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["TodoInfo","todo","className","id","title","name","completed","TodoList","todos","map","preparedTodo","users","username","email","userId","App","state","isCompleted","todosFromServer","select","choosenTitle","choosenPerson","addTodo","event","preventDefault","checkErrors","setState","length","clearForm","handleChange","target","value","children","errorName","userName","innerHTML","Boolean","onSubmit","this","type","placeholder","onChange","disabled","usersFromSever","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a6a0211.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport './TodoInfo.scss';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <div className=\"todo\">\n    <p className=\"todo__title\">{`To Do: ${todo.id}`}</p>\n    <h2>{todo.title}</h2>\n    <div className=\"todo__info\">\n      <p>{`User: ${todo.name}`}</p>\n      <p>{todo.completed ? 'Completed' : 'Not completed'}</p>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\nimport './TodoList.scss';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"list\">\n    {todos.map(preparedTodo => (\n      <li key={preparedTodo.id} className=\"list__item\">\n        <TodoInfo todo={preparedTodo} />\n      </li>\n    ))}\n  </ul>\n);\n","const users = [\n  {\n    id: 1,\n    name: 'Roman Apostol',\n    username: 'Roman',\n    email: 'Roman@gmail.com',\n  },\n  {\n    id: 2,\n    name: 'Anna Apostol',\n    username: 'Anna',\n    email: 'Anna@gmail.com',\n  },\n  {\n    id: 3,\n    name: 'Max Lysak',\n    username: 'Max',\n    email: 'Max@gmail.com',\n  },\n  {\n    id: 4,\n    name: 'Artem Topolskyi',\n    username: 'Artem',\n    email: 'Artem@gmail.com',\n  },\n  {\n    id: 5,\n    name: 'Yurii Holiuk',\n    username: 'Yurii',\n    email: 'Yurii@gmail.com',\n  },\n  {\n    id: 6,\n    name: 'Illia Vovchenko',\n    username: 'Illia',\n    email: 'Illia@gmail.com',\n  },\n  {\n    id: 7,\n    name: 'Ihor Nahnybida',\n    username: 'Ihor',\n    email: 'Ihor@gmail.com',\n  },\n  {\n    id: 8,\n    name: 'Alina Matuschak',\n    username: 'Alina',\n    email: 'Alina@gmail.com',\n  },\n  {\n    id: 9,\n    name: 'Pelahiia Khalishkhova',\n    username: 'Pelahiia',\n    email: 'Pelahiia@gmail.com',\n  },\n  {\n    id: 10,\n    name: 'Nadiia Martynets',\n    username: 'Nadiia',\n    email: 'Nadiia@gmail.com',\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 5,\n    name: 'Yurii Holiuk',\n    id: 1,\n    title: 'Play tennis, drink a coffee',\n    completed: false,\n  },\n  {\n    userId: 7,\n    id: 2,\n    name: 'Ihor Nahnybida',\n    title: 'Approve a task',\n    completed: true,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromSever from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\ninterface State {\n  name: string,\n  isCompleted: boolean,\n  todos: Todo[],\n  title: string,\n  select: number,\n  choosenTitle: boolean,\n  choosenPerson: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    name: '',\n    isCompleted: false,\n    todos: [...todosFromServer],\n    title: '',\n    select: 0,\n    choosenTitle: true,\n    choosenPerson: true,\n  };\n\n  addTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.checkErrors();\n\n    if (this.state.title && this.state.select) {\n      this.setState(state => ({\n        todos: [...state.todos, {\n          userId: state.select,\n          name: state.name,\n          id: state.todos.length + 1,\n          title: state.title,\n          completed: state.isCompleted,\n        }],\n      }));\n\n      this.clearForm();\n    }\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, children } = event.target;\n\n    const errorName = name === 'title' ? 'choosenTitle' : 'choosenPerson';\n    const userName = children.length ? children[+value].innerHTML : '';\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n      [errorName]: true,\n      name: userName,\n    }));\n  };\n\n  checkErrors = () => {\n    this.setState(state => {\n      const { title, select } = state;\n\n      return {\n        choosenTitle: Boolean(title),\n        choosenPerson: Boolean(select),\n      };\n    });\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      select: 0,\n      choosenTitle: true,\n      choosenPerson: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__header\">Add todo form</h1>\n        <form className=\"form\" onSubmit={this.addTodo}>\n          <div className=\"form__title\">\n            <input\n              className=\"form__field\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n              value={this.state.title}\n              onChange={this.handleChange}\n            />\n\n            {!this.state.choosenTitle\n            && (\n              <p className=\"form__error\">\n                Please enter the title\n              </p>\n            )}\n          </div>\n\n          <div className=\"form__user\">\n            <select\n              className=\"form__field\"\n              name=\"select\"\n              value={this.state.select}\n              onChange={this.handleChange}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n              {usersFromSever.map(({ id, name }) => (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n\n            {!this.state.choosenPerson\n              && (\n                <p className=\"form__error\">\n                  Please choose a user\n                </p>\n              )}\n          </div>\n\n          <button\n            className=\"form__add\"\n            type=\"submit\"\n          >\n            Add\n          </button>\n        </form>\n\n        <span className=\"form__users\">Users: </span>\n        <TodoList todos={this.state.todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}